[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode diffuse_oren_nayar;

uniform float height_scale = 1.0f;
uniform sampler2D displacement;

void vertex() {
	vec2 tex_position = VERTEX.xz / 2.0 + 0.5;
	vec2 hex_position = vec2(INSTANCE_CUSTOM.x, INSTANCE_CUSTOM.y);
	float height = texture(displacement, (hex_position + tex_position) / 1000.0f).x;
	VERTEX.y += height * height_scale;
}

void fragment() {
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	ALBEDO = vec3(COLOR[0], COLOR[1], COLOR[2]);
}"

[sub_resource type="OpenSimplexNoise" id=3]

[sub_resource type="NoiseTexture" id=2]
width = 5000
height = 5000
noise = SubResource( 3 )

[resource]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/height_scale = 30.0
shader_param/displacement = SubResource( 2 )
